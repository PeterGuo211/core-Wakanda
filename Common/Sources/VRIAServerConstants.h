/*
* This file is part of Wakanda software, licensed by 4D under
*  (i) the GNU General Public License version 3 (GNU GPL v3), or
*  (ii) the Affero General Public License version 3 (AGPL v3) or
*  (iii) a commercial license.
* This file remains the exclusive property of 4D and/or its licensors
* and is protected by national and international legislations.
* In any event, Licensee's compliance with the terms and conditions
* of the applicable license constitutes a prerequisite to any use of this file.
* Except as otherwise expressly stated in the applicable license,
* such license does not include any other license or rights on this file,
* 4D's and/or its licensors' trademarks and/or other proprietary rights.
* Consequently, no title, copyright or other proprietary rights
* other than those specified in the applicable license is granted.
*/
#ifndef __RIAConstants__
#define __RIAConstants__


// OSType signature 

const uLONG kRIA_OSTYPE_SIGNATURE = 'iasv';		// Internet applications server


// Errors constants: LAST ID = 1067

// RIA Server application errors
const XBOX::VError	VE_RIA_HTTP_SERVER_NOT_FOUND					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1001);
const XBOX::VError	VE_RIA_DB4D_COMPONENT_NOT_FOUND					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1002);
const XBOX::VError	VE_RIA_FILE_DOES_NOT_EXIST						= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1004);
const XBOX::VError	VE_RIA_SECURITY_MANAGER_COMPONENT_NOT_FOUND		= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1005);
const XBOX::VError	VE_RIA_HTTP_SERVER_PROJECT_NOT_FOUND			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1006);
const XBOX::VError	VE_RIA_UAG_COMPONENT_NOT_FOUND					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1007);
const XBOX::VError	VE_RIA_LANGUAGE_SYNTAX_COMPONENT_NOT_FOUND		= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1008);
const XBOX::VError	VE_RIA_CANNOT_LOAD_UAG_DIRECTORY				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1009);
const XBOX::VError	VE_RIA_SYMBOLS_TABLE_NOT_FOUND					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1010);
const XBOX::VError	VE_RIA_LOG_FOLDER_NOT_FOUND						= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1047);
const XBOX::VError	VE_RIA_INVALID_COMMAND_LINE_ARGUMENTS			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1052);
const XBOX::VError	VE_RIA_CURRENT_SOLUTION_ALREADY_BEING_OPENED	= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1065);
const XBOX::VError	VE_RIA_CURRENT_SOLUTION_ALREADY_BEING_CLOSED	= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1066);


// Solution errors
const XBOX::VError	VE_RIA_CANNOT_OPEN_SOLUTION						= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1011);
const XBOX::VError	VE_RIA_INVALID_DESIGN_SOLUTION					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1012);


// Application errors
const XBOX::VError	VE_RIA_CANNOT_OPEN_PROJECT						= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1013);
const XBOX::VError	VE_RIA_CANNOT_START_PROJECT						= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1014);
const XBOX::VError	VE_RIA_INVALID_CONTEXT							= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1015);
const XBOX::VError	VE_RIA_UNKNOWN_CONTEXT							= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1016);
const XBOX::VError	VE_RIA_INVALID_DESIGN_PROJECT					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1017);
const XBOX::VError	VE_RIA_CANNOT_EXECUTE_BOOTSTRAP_FILE			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1053);


// Settings errors
const XBOX::VError	VE_RIA_SETTINGS_FILE_NOT_FOUND					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1018);
const XBOX::VError	VE_RIA_CANNOT_LOAD_SETTINGS_FILES				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1019);
const XBOX::VError	VE_RIA_CANNOT_LOAD_HTTP_SETTINGS				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1020);
const XBOX::VError	VE_RIA_CANNOT_LOAD_PROJECT_SETTINGS				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1021);
const XBOX::VError	VE_RIA_CANNOT_LOAD_WEB_APP_SETTINGS				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1022);
const XBOX::VError	VE_RIA_RPC_SERVICE_SETTINGS_NOT_FOUND			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1024);
const XBOX::VError	VE_RIA_DATA_SERVICE_SETTINGS_NOT_FOUND			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1025);
const XBOX::VError	VE_RIA_CANNOT_LOAD_DATABASE_SETTINGS			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1048);
const XBOX::VError	VE_RIA_CANNOT_LOAD_RESOURCES_SETTINGS			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1051);
const XBOX::VError	VE_RIA_CANNOT_LOAD_PERMISSIONS_SETTINGS			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1056);


// Javascript errors
const XBOX::VError	VE_RIA_JS_FILE_NOT_FOUND						= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1027);
const XBOX::VError	VE_RIA_JS_CANNOT_CREATE_CONTEXT					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1028);
const XBOX::VError	VE_RIA_JS_CANNOT_EVALUATE_SCRIPT				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1029);
const XBOX::VError	VE_RIA_JS_CANNOT_CALL_REQUEST_HANDLER			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1030);
const XBOX::VError	VE_RIA_JS_CANNOT_ADD_REQUEST_HANDLER			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1031);
const XBOX::VError	VE_RIA_JS_CALL_TO_REQUIRE_FAILED				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1032);
const XBOX::VError	VE_RIA_JS_CALL_TO_FUNCTION_FAILED				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1033);
const XBOX::VError	VE_RIA_JS_CANNOT_REMOVE_REQUEST_HANDLER			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1057);
const XBOX::VError	VE_RIA_JS_CANNOT_BE_USED_IN_THIS_CONTEXT		= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1058);
const XBOX::VError	VE_RIA_JS_CANNOT_INITIALIZE_CONTEXT				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1059);
const XBOX::VError	VE_RIA_JS_CANNOT_UNINITIALIZE_CONTEXT			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1060);


// HTTP Server errors
const XBOX::VError	VE_RIA_CANNOT_START_HTTP_SERVER					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1034);


// Database / Data Service errors
const XBOX::VError	VE_RIA_CANNOT_OPEN_DATABASE						= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1035);
const XBOX::VError	VE_RIA_CANNOT_ENABLE_DATA_SERVICE				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1036);
const XBOX::VError	VE_RIA_CANNOT_DISABLE_DATA_SERVICE				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1037);
const XBOX::VError	VE_RIA_NONE_OPENED_DATABASE_FOUND				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1038);
const XBOX::VError	VE_RIA_DATA_SERVICE_NOT_FOUND					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1055);
const XBOX::VError	VE_RIA_MODEL_FILE_NOT_FOUND						= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1067);


// Web App Service errors
const XBOX::VError	VE_RIA_CANNOT_ENABLE_WEB_APP_SERVICE			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1039);
const XBOX::VError	VE_RIA_CANNOT_DISABLE_WEB_APP_SERVICE			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1040);


// RPC Methods / RPC Service errors
const XBOX::VError	VE_RIA_CANNOT_LOAD_RPC_METHODS_DEFINITION		= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1041);
const XBOX::VError	VE_RIA_CANNOT_ENABLE_RPC_SERVICE				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1042);
const XBOX::VError	VE_RIA_CANNOT_DISABLE_RPC_SERVICE				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1043);
const XBOX::VError	VE_RIA_RPC_SERVICE_NOT_FOUND					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1049);
const XBOX::VError	VE_RIA_RPC_CATALOG_NOT_FOUND					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1050);
const XBOX::VError	VE_RIA_CANNOT_LOAD_RPC_MODULE					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1062);
const XBOX::VError	VE_RIA_RPC_MODULE_NOT_FOUND						= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1063);
const XBOX::VError	VE_RIA_RPC_INVALID_METHOD_PATH					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1064);


// Debug Service errors
const XBOX::VError	VE_RIA_CANNOT_ENABLE_DEBUG_SERVICE				= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1046);


// Services errors
const XBOX::VError	VE_RIA_CANNOT_POST_MESSAGE_TO_SERVICES			= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1054);


// Permissions errors
const XBOX::VError	VE_RIA_CANNOT_LOAD_PERMISSIONS					= MAKE_VERROR( kRIA_OSTYPE_SIGNATURE, 1061);



#endif